name: Deploy to EC2

on:
  push:
    branches:
      - main
      - staging
      - development

jobs:
  deploy:
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup SSH Key
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 3: Deploy to EC2
      - name: Deploy Backend to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "Navigating to backend directory..."
            cd /home/ubuntu/proximity-backend || exit 1

            echo "Pulling latest code from GitHub..."
            git fetch origin ${{ github.ref_name }}
            git reset --hard origin/${{ github.ref_name }}

            echo "Creating .env file with environment variables..."
            BRANCH="${{ github.ref_name }}"
            if [ "$BRANCH" = "main" ]; then
              echo "AWS_ACCESS_KEY_ID=${{ secrets.PROD_ACCESS_KEY_ID }}" > .env
              echo "AWS_SECRET_ACCESS_KEY=${{ secrets.PROD_SECRET_ACCESS_KEY }}" >> .env
              echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
              echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
              echo "DYNAMODB_TABLE_NAME=${{ secrets.PROD_DYNAMODB_TABLE_NAME }}" >> .env
            elif [ "$BRANCH" = "staging" ]; then
              echo "AWS_ACCESS_KEY_ID=${{ secrets.STAGING_ACCESS_KEY_ID }}" > .env
              echo "AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_SECRET_ACCESS_KEY }}" >> .env
              echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
              echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
              echo "DYNAMODB_TABLE_NAME=${{ secrets.STAGING_DYNAMODB_TABLE_NAME }}" >> .env
            elif [ "$BRANCH" = "development" ]; then
              echo "AWS_ACCESS_KEY_ID=${{ secrets.DEV_ACCESS_KEY_ID }}" > .env
              echo "AWS_SECRET_ACCESS_KEY=${{ secrets.DEV_SECRET_ACCESS_KEY }}" >> .env
              echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
              echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
              echo "DYNAMODB_TABLE_NAME=${{ secrets.DEV_DYNAMODB_TABLE_NAME }}" >> .env
            else
              echo "Unsupported branch!" >&2
              exit 1
            fi

            echo "Rebuilding Docker container..."
            sudo docker stop backend-container || true
            sudo docker rm backend-container || true
            sudo docker build -t proximity-backend . || (echo "Docker build failed!" && exit 1)
            sudo docker run -d --env-file .env -p 3000:3000 --name backend-container proximity-backend || (echo "Docker run failed!" && exit 1)

            echo "Deployment complete!"
          EOF
