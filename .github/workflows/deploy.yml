name: Deploy to EC2

on:
  push:
    branches:
      - development
      - staging
      - main

jobs:
  deploy:
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Determine Environment
      - name: Set Environment Variables
        id: set-env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi
          echo "Environment set to $ENVIRONMENT"

      # Step 3: Setup SSH Key
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 4: Deploy to EC2
      - name: Deploy Backend to EC2
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_HOST: ${{ secrets[env.ENVIRONMENT + '_EC2_HOST'] }}
          EC2_USER: ${{ secrets[env.ENVIRONMENT + '_EC2_USER'] }}
          AWS_ACCESS_KEY_ID: ${{ secrets[env.ENVIRONMENT + '_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[env.ENVIRONMENT + '_SECRET_ACCESS_KEY'] }}
          DYNAMODB_TABLE_NAME: ${{ secrets[env.ENVIRONMENT + '_DYNAMODB_TABLE_NAME'] }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            echo "Navigating to backend directory..."
            cd /home/ubuntu/proximity-backend || exit 1

            echo "Pulling latest code from GitHub..."
            git pull origin ${{ github.ref_name }}

            echo "Exporting environment variables for .env file..."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export JWT_SECRET=${JWT_SECRET}
            export AWS_REGION=${AWS_REGION}
            export DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}

            echo "Creating/updating .env file..."
            echo "AWS_ACCESS_KEY_ID=\$AWS_ACCESS_KEY_ID" > .env
            echo "AWS_SECRET_ACCESS_KEY=\$AWS_SECRET_ACCESS_KEY" >> .env
            echo "JWT_SECRET=\$JWT_SECRET" >> .env
            echo "AWS_REGION=\$AWS_REGION" >> .env
            echo "DYNAMODB_TABLE_NAME=\$DYNAMODB_TABLE_NAME" >> .env

            echo "Rebuilding Docker container..."
            sudo docker stop backend-container || true
            sudo docker rm backend-container || true
            sudo docker build -t proximity-backend .
            sudo docker run -d --env-file .env -p 3000:3000 --name backend-container proximity-backend

            echo "Deployment complete for $ENVIRONMENT environment!"
          EOF
